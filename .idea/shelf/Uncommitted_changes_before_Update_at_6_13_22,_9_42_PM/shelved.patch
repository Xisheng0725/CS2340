Index: src/main/java/com/cs2340/cs2340/MainPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cs2340.cs2340;\n\nimport javafx.animation.FadeTransition;\nimport javafx.application.Application;\nimport javafx.event.ActionEvent;\nimport javafx.event.EventHandler;\nimport javafx.geometry.Insets;\nimport javafx.geometry.Pos;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.input.MouseEvent;\nimport javafx.scene.layout.*;\nimport javafx.scene.paint.ImagePattern;\nimport javafx.scene.shape.Circle;\nimport javafx.scene.text.Text;\nimport javafx.stage.Stage;\nimport javafx.util.Duration;\nimport javafx.scene.paint.Color;\n\n/**\n *Represents MainPage named MainPage.\n *@author Xisheng Zhang, Qihui Wang, Porter Zach, Xueqing Li, and Shane Sinnerine.\n *@version 1.0.\n */\npublic class MainPage extends Application {\n\n    private static Scene selectScene;\n    private static Button tempBackBtn;\n    /**\n     * Create the main method.\n     * Please add commons or JavaDocs description when you add something\n     * @param args take in\n     */\n    public static void main(String[] args) {\n        launch(args);\n    }\n    /**\n     * Create the start method that using for main page GUI.\n     * @param primaryStage take in\n     */\n    public void start(Stage primaryStage) {\n\n        //Create all objects to be placed on home screen.\n        Button homeStartBtn = new Button(\"Start game\");\n        StackPane homeMain = new StackPane();\n        homeMain.setStyle(\"-fx-background-color: azure\");\n        BorderPane homeBP = new BorderPane();\n        ImageView homeTitle = getImageView(\"/royale2.PNG\", 350, 700);\n        ImageView icons = getImageView(\"/icons.PNG\", 400, 900);\n\n\n        //Create and format homeScreen\n        formatHomeScreen(homeStartBtn, homeMain, homeBP, homeTitle, icons);\n        Scene homeScene = new Scene(homeMain, 1200, 800);\n\n        \n        //Set up primary stage\n        primaryStage.setTitle(\"Casino Royale Deluxe\");\n        primaryStage.setScene(homeScene);\n\n        //Create objects needed for selection page.\n        StackPane selectMain = new StackPane();\n        selectMain.setStyle(\"-fx-background-color: azure\");\n        BorderPane selectBP = new BorderPane();\n        Button selectReturn = new Button(\"Return to Main Page\");\n        Button selectBsInfo = new Button(\"Instructions\");\n        Button selectBjInfo = new Button(\"Instructions\");\n        Button selectClrInfo = new Button(\"Instructions\");\n        HBox hbox = new HBox(100);\n        ImageView selectBsImageView = getImageView(\"/battleship.JPG\", 200, 250);\n        ImageView selectBjImageView = getImageView(\"/blackjack.JPG\", 200, 250);\n        ImageView selectClrImageView = getImageView(\"/color.JPG\", 200, 250);\n        ImageView selectionTitle = getImageView(\"/royale.PNG\", 250, 800);\n\n        //create and format selection scene\n        formatSelectScene(selectMain, selectBP, selectReturn, hbox, selectBsImageView, selectBjImageView, selectClrImageView, selectBsInfo, selectBjInfo, selectClrInfo, selectionTitle);\n        selectScene = new Scene(selectMain, 1200, 800);\n\n        //Create temporary construction scene\n        Text tempTxt = new Text(\"This page is under construction...\");\n        tempBackBtn = new Button(\"Return\");\n        BorderPane tempBP = new BorderPane();\n        tempBP.setCenter(tempTxt);\n        tempBP.setBottom(tempBackBtn);\n        tempBackBtn.setOnAction(e -> primaryStage.setScene(selectScene));\n        tempBP.setPadding(new Insets(20, 20, 20, 20));\n        Scene tempScene = new Scene(tempBP, 1200, 800);\n\n\n        // Create the Color Game game Page\n        BorderPane colorGame = new BorderPane();\n        StackPane colorGamePane = new StackPane();\n        Scene colorGameScene = new Scene(colorGamePane, 1200, 800);\n        Button gameReturnButton = new Button(\"Return\");\n        gameReturnButton.setOnAction(e -> primaryStage.setScene(selectScene));\n        ImageView colorGameTitle = getImageView(\"colorBack.PNG\", 800, 1200);\n        formatGameScreen(colorGameScene, gameReturnButton, colorGamePane, colorGame, colorGameTitle);\n\n        //Create the color game instruction page\n        BorderPane colorBP = new BorderPane();\n        StackPane colorPane = new StackPane();\n        Scene colorScene = new Scene(colorPane, 1200, 800);\n        ImageView colorTitle = getImageView(\"color.PNG\", 800, 1200);\n        Button colorBackBtn = new Button(\"Return\");\n        colorBackBtn.setOnAction(e -> primaryStage.setScene(selectScene));\n\n        Button enterGame = new Button(\"Start Game\");\n        enterGame.setOnAction(e -> primaryStage.setScene(colorGameScene));\n        formatColorScreen(colorScene, colorBackBtn, colorPane, colorBP, colorTitle, enterGame);\n\n        // setButton Style\n        gameButtonStyle(selectReturn, selectBsInfo, selectBjInfo, selectClrInfo, tempBackBtn, homeStartBtn);\n\n        //Home Screen event mapping\n        homeStartBtn.setOnAction(e -> primaryStage.setScene(selectScene));\n\n        //Selection screen event mapping\n        selectReturn.setOnAction(e -> primaryStage.setScene(homeScene));\n\n\n        // set animation and MouseClickedAction\n        selectBjImageView.setOnMouseClicked(new EventHandler<MouseEvent>(){\n            public void handle(MouseEvent event) {\n                FadeTransition fadeBj = new FadeTransition(Duration.millis(1500), selectBjImageView);\n                FadeTransition fadeClr = new FadeTransition(Duration.millis(1500), selectClrImageView);\n                fadeBj.setFromValue(10);\n                fadeBj.setToValue(0.1);\n                fadeBj.setCycleCount(2);\n                fadeBj.play();\n\n                fadeClr.setFromValue(10);\n                fadeClr.setToValue(1);\n                fadeClr.setCycleCount(1);\n                fadeClr.play();\n\n                fadeClr.setOnFinished(new EventHandler<ActionEvent>() {\n                    public void handle(ActionEvent e) {\n                        fadeBj.stop();\n                        fadeClr.stop();\n                        primaryStage.setScene(tempScene);\n                    }\n                }) ;\n            }\n        });\n\n        // set animation and MouseClickedAction\n        selectBsImageView.setOnMouseClicked(new EventHandler<MouseEvent>() {\n            public void handle(MouseEvent event2) {\n                FadeTransition fadeBS = new FadeTransition(Duration.millis(1500), selectBsImageView);\n                FadeTransition fadeClr = new FadeTransition(Duration.millis(1500), selectClrImageView);\n                fadeBS.setFromValue(10);\n                fadeBS.setToValue(0.1);\n                fadeBS.setCycleCount(2);\n                fadeBS.play();\n\n                fadeClr.setFromValue(10);\n                fadeClr.setToValue(1);\n                fadeClr.setCycleCount(1);\n                fadeClr.play();\n\n                fadeClr.setOnFinished(new EventHandler<ActionEvent>() {\n                    public void handle(ActionEvent e) {\n                        fadeBS.stop();\n                        fadeClr.stop();\n                        primaryStage.setScene(tempScene);\n                    }\n                }) ;\n            }\n        });\n\n        // set animation and MouseClickedAction\n        selectClrImageView.setOnMouseClicked(new EventHandler<MouseEvent>() {\n            public void handle(MouseEvent event3) {\n                FadeTransition fadeBj = new FadeTransition(Duration.millis(1500), selectBjImageView);\n                FadeTransition fadeClr = new FadeTransition(Duration.millis(1500), selectClrImageView);\n                fadeClr.setFromValue(10);\n                fadeClr.setToValue(0.1);\n                fadeClr.setCycleCount(2);\n                fadeClr.play();\n\n                fadeBj.setFromValue(10);\n                fadeBj.setToValue(1);\n                fadeBj.setCycleCount(1);\n                fadeBj.play();\n\n                fadeBj.setOnFinished(new EventHandler<ActionEvent>() {\n                    public void handle(ActionEvent e) {\n                        fadeBj.stop();\n                        fadeClr.stop();\n                        primaryStage.setScene(colorGameScene);\n                    }\n                });\n            }\n        });\n        selectBjInfo.setOnAction(e -> primaryStage.setScene(tempScene));\n        selectBsInfo.setOnAction(e -> primaryStage.setScene(tempScene));\n        selectClrInfo.setOnAction(e -> primaryStage.setScene(colorScene));\n\n        //Show primary stage\n        primaryStage.show();\n    }\n    /**\n     * change the button style.\n     * @param selectReturn Return button\n     * @param selectBsInfo Info button\n     * @param selectBjInfo Info Button\n     * @param selectClrInfo Info Button\n     * @param tempBackBtn Back Button\n     */\n    private void gameButtonStyle(Button selectReturn, Button selectBsInfo, Button selectBjInfo, Button selectClrInfo, Button tempBackBtn, Button homeStartBtn) {\n        String cssStyle = \" -fx-text-fill: #006464;\\n\" +\n                \"    -fx-background-color: #DFB951;\\n\" +\n                \"    -fx-border-radius: 20;\\n\" +\n                \"    -fx-background-radius: 20;\\n\" +\n                \"    -fx-padding: 5;\";\n        String cssForHome = \" -fx-text-fill: #006464;\\n\" +\n                \"    -fx-background-color: #DFB951;\\n\" +\n                \"    -fx-border-radius: 30;\\n\" +\n                \"    -fx-background-radius: 90;\\n\" +\n                \"    -fx-padding: 20;\";\n        homeStartBtn.setStyle(cssForHome);\n        selectReturn.setStyle((cssStyle));\n        selectBsInfo.setStyle((cssStyle));\n        selectBjInfo.setStyle((cssStyle));\n        selectClrInfo.setStyle((cssStyle));\n        tempBackBtn.setStyle((cssStyle));\n    }\n    /**\n     * change the layout of main page.\n     * @param main is a stackpane for main\n     * @param bp BoardPane\n     * @param retBtn return button\n     * @param bsInfo info button\n     * @param clrInfo info button\n     * @param hbox hbox\n     * @param bsIV image\n     * @param bjIV image\n     * @param clrIV image\n     * @param selectionTitle image\n     */\n    private void formatSelectScene(StackPane main, BorderPane bp, Button retBtn, HBox hbox, ImageView bsIV, ImageView bjIV,\n                                   ImageView clrIV, Button bsInfo, Button bjInfo, Button clrInfo, ImageView selectionTitle) {\n        VBox bsVBox = new VBox();\n        bsVBox.setSpacing(10);\n        bsVBox.getChildren().addAll(bsIV, bsInfo);\n        bsVBox.setAlignment(Pos.CENTER);\n\n        VBox bjVBox = new VBox();\n        bjVBox.setSpacing(10);\n        bjVBox.getChildren().addAll(bjIV, bjInfo);\n        bjVBox.setAlignment(Pos.CENTER);\n\n        VBox clrVBox = new VBox();\n        clrVBox.setSpacing(10);\n        clrVBox.getChildren().addAll(clrIV, clrInfo);\n        clrVBox.setAlignment(Pos.CENTER);\n\n        hbox.getChildren().addAll(bsVBox, bjVBox, clrVBox);\n        hbox.setAlignment(Pos.CENTER);\n\n        bp.setCenter(hbox);\n        bp.setTop(selectionTitle);\n        bp.setBottom(retBtn);\n        selectionTitle.setTranslateX(200);\n        selectionTitle.setTranslateY(25);\n        hbox.setTranslateY(-90);\n        retBtn.setTranslateX(30);\n        retBtn.setTranslateY(-30);\n        main.getChildren().addAll(bp);\n    }\n\n    /**\n     *\n     * @param btnStart Start button\n     * @param homeScreen stackPane to create scene with\n     * @param homeBP borderpane to create home scene with\n     */\n    private void formatHomeScreen(Button btnStart, StackPane homeScreen, BorderPane homeBP, ImageView homeTitle, ImageView icons) {\n        //Add elements to home screen scene\n        VBox vbox = new VBox(15);\n        vbox.getChildren().addAll(homeTitle, btnStart, icons);\n        vbox.setAlignment(Pos.CENTER);\n        homeBP.setCenter(vbox);\n        homeScreen.getChildren().addAll(homeBP);\n    }\n\n    private void formatGameScreen(Scene colorGameScene, Button colorBackBtn, StackPane colorGamePane, BorderPane colorGame, ImageView colorGameTitle) {\n        setButton(colorBackBtn);\n        colorBackBtn.setTranslateX(30);\n        colorBackBtn.setTranslateY(-30);\n        colorGame.setBottom(colorBackBtn);\n        ImageView gamePosition = getImageView(\"gp.png\", 785, 1300);\n\n        VBox imageCheckHead = new VBox();\n        ImageView checkHead = getImageView(\"begin.png\", 200, 200);\n        imageCheckHead.getChildren().addAll(checkHead);\n        imageCheckHead.setTranslateX(850);\n        imageCheckHead.setTranslateY(530);\n\n        VBox grey = new VBox(25);\n        ImageView grey1 = getImageView(\"gray.png\", 50, 50);\n        ImageView grey2 = getImageView(\"gray.png\", 50, 50);\n        ImageView grey3 = getImageView(\"gray.png\", 50, 50);\n        ImageView grey4 = getImageView(\"gray.png\", 50, 50);\n        grey.getChildren().addAll(grey1, grey2, grey3, grey4);\n        grey.setTranslateX(850);\n        grey.setTranslateY(180);\n\n\n        HBox allColors = new HBox(40);\n        ImageView red = getImageView(\"red.png\", 50, 50);\n        Image redImage = new Image(\"red.png\");\n        ImageView orange = getImageView(\"orange.png\", 50, 50);\n        Image orangeImage = new Image(\"orange.png\");\n        ImageView yellow = getImageView(\"yellow.png\", 50, 50);\n        Image yellowImage = new Image(\"yellow.png\");\n        ImageView green = getImageView(\"green.png\", 50, 50);\n        Image greenImage = new Image(\"green.png\");\n        ImageView blue = getImageView(\"blue.png\", 50, 50);\n        Image blueImage = new Image(\"blue.png\");\n        ImageView purple = getImageView(\"purple.png\", 50, 50);\n        Image purpleImage = new Image(\"purple.png\");\n        allColors.getChildren().addAll(red, orange, yellow, green, blue, purple);\n        allColors.setTranslateX(140);\n        allColors.setTranslateY(610);\n\n\n\n        GridPane eachRound = new GridPane();\n        eachRound.setMinSize(700, 500);\n        eachRound.setHgap(60);\n        eachRound.setVgap(25);\n        Circle[][] pins = new Circle[8][4];\n        int rows = 8;\n        int columns = 4;\n        for (int i = 0; i < rows; i++) {\n            for (int j = 0; j < columns; j++) {\n                Circle circle = new Circle(20);\n                pins[i][j] = circle;\n                circle.setFill(Color.GREY);\n                eachRound.add(pins[i][j], i, j);\n            }\n        }\n        eachRound.setTranslateX(150);\n        eachRound.setTranslateY(180);\n        red.setOnMouseClicked(new EventHandler<MouseEvent>() {\n            @Override\n            public void handle(MouseEvent mouseEvent) {\n                Image redImage = new Image(\"red.png\");\n                enterPin(redImage, pins);\n            }\n        });\n        orange.setOnMouseClicked(new EventHandler<MouseEvent>() {\n            @Override\n            public void handle(MouseEvent mouseEvent) {\n                Image orangeImage = new Image(\"orange.png\");\n                enterPin(orangeImage, pins);\n            }\n        });\n        yellow.setOnMouseClicked(new EventHandler<MouseEvent>() {\n            @Override\n            public void handle(MouseEvent mouseEvent) {\n                Image yellowImage = new Image(\"yellow.png\");\n                enterPin(yellowImage, pins);\n            }\n        });\n        green.setOnMouseClicked(new EventHandler<MouseEvent>() {\n            @Override\n            public void handle(MouseEvent mouseEvent) {\n                Image greenImage = new Image(\"green.png\");\n                enterPin(greenImage, pins);\n            }\n        });\n        blue.setOnMouseClicked(new EventHandler<MouseEvent>() {\n            @Override\n            public void handle(MouseEvent mouseEvent) {\n                Image blueImage = new Image(\"blue.png\");\n                enterPin(blueImage, pins);\n            }\n        });\n        purple.setOnMouseClicked(new EventHandler<MouseEvent>() {\n            @Override\n            public void handle(MouseEvent mouseEvent) {\n                Image purpleImage = new Image(\"purple.png\");\n                enterPin(purpleImage, pins);\n            }\n        });\n\n\n        colorGamePane.getChildren().addAll(colorGameTitle, gamePosition, imageCheckHead, eachRound, colorGame, grey, allColors);\n    }\n    private void enterPin(Image tempImage, Circle[][] pins) {\n        boolean check = false;\n        for (int i = 0; i < pins.length; i++) {\n            if (!check) {\n                for (int j = 0; j < pins[i].length; j++) {\n                    if (pins[i][j].getFill() == Color.GREY) {\n                        pins[i][j].setFill(new ImagePattern(tempImage));\n                        check = true;\n                        break;\n                    }\n                }\n            } else {\n                break;\n            }\n        }\n    }\n\n\n    private void formatColorScreen(Scene colorScene, Button colorBackReturn, StackPane colorPane, BorderPane colorBP, ImageView colorTitle, Button enterGame) {\n        setButton(colorBackReturn);\n\n        setButton(enterGame);\n\n        HBox buttonHbox = new HBox(1030);\n        buttonHbox.getChildren().addAll(colorBackReturn, enterGame);\n        buttonHbox.setTranslateX(30);\n        buttonHbox.setTranslateY(-30);\n        colorBP.setBottom(buttonHbox);\n\n        Text instruction1 = new Text(\"1. Players should try to correctly guess the color and its corresponding position\\n \" +\n                \"   in the blind box in 8 rounds of guessing.\");\n        setText(instruction1);\n        Text instruction2 = new Text(\"2. At the end of a round of guessing, the result will be displayed.\");\n        setText(instruction2);\n        Text instruction3 = new Text(\"3. Green means the color and position are correct\");\n        setText(instruction3);\n        Text instruction4 = new Text(\"4. Red means the color is right but the position is wrong.\");\n        setText(instruction4);\n        Text instruction5 = new Text(\"5. No color means the color is not in the blind box\");\n        setText(instruction5);\n        Text instruction6 = new Text(\"Examples are shown below.\");\n        setText(instruction6);\n        VBox vText = new VBox(17);\n        vText.getChildren().addAll(instruction1, instruction2, instruction3, instruction4, instruction5, instruction6);\n        vText.setTranslateX(180);\n        vText.setTranslateY(178);\n\n\n        VBox example1 = new VBox(1);\n        ImageView instructionImage1 = getImageView(\"2half2not.png\", 135, 135);\n        Text explain1 = new Text(\"Red: correct color but wrong position. \\n\" + \"White: wrong color and wrong position.\");\n        setText(explain1);\n        explain1.setStyle(\"-fx-font-size: 15px\");\n        example1.getChildren().addAll(explain1, instructionImage1);\n        VBox example2 = new VBox(1);\n        ImageView instructionImage2 = getImageView(\"2full2not.png\", 135, 135);\n        Text explain2 = new Text(\"Green: correct color and correct position. \\n\" + \"White: wrong color and wrong position.\");\n        setText(explain2);\n        explain2.setStyle(\"-fx-font-size: 15px\");\n        example2.getChildren().addAll(explain2, instructionImage2);\n        HBox instruction = new HBox(21);\n        instruction.getChildren().addAll(example1, example2);\n        instruction.setTranslateX(150);\n        instruction.setTranslateY(563);\n\n\n        colorPane.getChildren().addAll(colorTitle, instruction, vText, colorBP);\n\n\n    }\n\n    /**\n     *\n     * @param fileName name of image file to be loaded\n     * @param height height of image file for display\n     * @param width width of image file for display\n     * @return ImageView of image passed in with requested height and width\n     */\n    private ImageView getImageView(String fileName, int height, int width) {\n        Image image = new Image(fileName);\n        ImageView imageView = new ImageView(image);\n        imageView.setFitHeight(height);\n        imageView.setFitWidth(width);\n        return imageView;\n    }\n\n    private static void setButton(Button bt) {\n        String cssStyle = \" -fx-text-fill: #006464;\\n\" +\n                \"    -fx-background-color: #DFB951;\\n\" +\n                \"    -fx-border-radius: 20;\\n\" +\n                \"    -fx-background-radius: 20;\\n\" +\n                \"    -fx-padding: 5;\";\n        bt.setStyle(cssStyle);\n    }\n    private static void setText(Text tx) {\n        String cssStyle = \" -fx-text-fill: #006464;\\n\" +\n                \"        -fx-font-family: Comic Sans MS;\\n\" +\n                \"        -fx-font-size: 25px;\";\n        tx.setStyle(cssStyle);\n        Color c = Color.web(\"#006464\");\n        tx.setFill(c);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/cs2340/cs2340/MainPage.java b/src/main/java/com/cs2340/cs2340/MainPage.java
--- a/src/main/java/com/cs2340/cs2340/MainPage.java	
+++ b/src/main/java/com/cs2340/cs2340/MainPage.java	
@@ -299,6 +299,13 @@
         imageCheckHead.setTranslateX(850);
         imageCheckHead.setTranslateY(530);
 
+        HBox title = new HBox();
+        ImageView title1 = getImageView("GTC Title.png", 100, 500);
+        title.getChildren().addAll(title1);
+        title.setTranslateX(50);
+        title.setTranslateY(500);
+
+
         VBox grey = new VBox(25);
         ImageView grey1 = getImageView("gray.png", 50, 50);
         ImageView grey2 = getImageView("gray.png", 50, 50);
@@ -389,7 +396,7 @@
         });
 
 
-        colorGamePane.getChildren().addAll(colorGameTitle, gamePosition, imageCheckHead, eachRound, colorGame, grey, allColors);
+        colorGamePane.getChildren().addAll(colorGameTitle, gamePosition, imageCheckHead, title, eachRound, colorGame, grey, allColors);
     }
     private void enterPin(Image tempImage, Circle[][] pins) {
         boolean check = false;
